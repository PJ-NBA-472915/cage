# Docker Compose configuration for production environment
# Use with: docker-compose -f docker-compose.yml -f docker-compose.production.yml up

version: "3.8"

services:
  # Production overrides
  files-api:
    environment:
      - ENVIRONMENT=production
      - DEV_MODE=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - RELOAD=false
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  git-api:
    environment:
      - ENVIRONMENT=production
      - DEV_MODE=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - RELOAD=false
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  rag-api:
    environment:
      - ENVIRONMENT=production
      - DEV_MODE=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - RELOAD=false
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  lock-api:
    environment:
      - ENVIRONMENT=production
      - DEV_MODE=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - RELOAD=false
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  mcp:
    environment:
      - ENVIRONMENT=production
      - DEV_MODE=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - DEBUGPY_ENABLED=0
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Production database with persistent storage
  postgres:
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-cage}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Production Redis with persistence
  redis:
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
