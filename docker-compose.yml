services:
  # PostgreSQL database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: cage
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cage API service
  api:
    build:
      context: .
      args:
        GIT_EMAIL: ${GIT_EMAIL:-cage-agent@example.com}
        GIT_NAME: ${GIT_NAME:-"Cage Agent"}
    command: ["python", "-m", "uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"  # Different port to avoid conflict
      - "5678:5678"  # debugpy debug port
    environment:
      - POD_TOKEN=${POD_TOKEN}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/cage
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REPO_PATH=/work/repo
      - DEBUGPY_ENABLED=${DEBUGPY_ENABLED:-0}
      - DEBUGPY_WAIT_FOR_CLIENT=${DEBUGPY_WAIT_FOR_CLIENT:-0}
    volumes:
      - .:/app
      - ${REPO_PATH}:/work/repo
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # MCP Server (Streamable HTTP)
  mcp:
    build:
      context: .
      args:
        GIT_EMAIL: ${GIT_EMAIL:-cage-agent@example.com}
        GIT_NAME: ${GIT_NAME:-"Cage Agent"}
    command: ["python", "-m", "uvicorn", "src.cage.mcp_server:app", "--host", "0.0.0.0", "--port", "8765"]
    ports:
      - "${MCP_PORT:-8765}:8765"
      - "5679:5679"  # debugpy debug port
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/cage
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REPO_PATH=/work/repo
      - MCP_TOKENS=${MCP_TOKENS:-}
      - MCP_SESSION_TTL=${MCP_SESSION_TTL:-3600}
      - MCP_RATE_MAX_CALLS=${MCP_RATE_MAX_CALLS:-240}
      - DEBUGPY_ENABLED=${DEBUGPY_ENABLED:-0}
      - DEBUGPY_WAIT_FOR_CLIENT=${DEBUGPY_WAIT_FOR_CLIENT:-0}
    volumes:
      - .:/app
      - ${REPO_PATH}:/work/repo
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
