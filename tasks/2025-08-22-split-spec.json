{
  "id": "2025-08-22-split-spec",
  "title": "Split large specification into immutable, indexed context files + usage guide",
  "owner": "Jaak",
  "status": "done",
  "created_at": "2025-08-22 16:00",
  "updated_at": "2025-08-22 19:43",
  "progress_percent": 100,
  "tags": [
    "cursor",
    "task",
    "specification",
    "documentation"
  ],
  "summary": "Split a ~100-page specification file into smaller, verbatim context files for selective loading by agents. Produce a stable directory structure, index/manifest for fast lookup, and a human-readable GUIDE.md explaining where to find information and when to use what.",
  "success_criteria": [
    {
      "text": "Directory structure exists as specified under `.cursor/context/spec/`",
      "checked": true
    },
    {
      "text": "Every slice has correct front matter and verbatim body",
      "checked": true
    },
    {
      "text": "MANIFEST.yaml lists all slices in order and passes referential integrity check",
      "checked": true
    },
    {
      "text": "GUIDE.md clearly explains where things are and when to use them with at least 6 concrete scenarios",
      "checked": true
    },
    {
      "text": "Rebuild check passes (re-running task is idempotent)",
      "checked": true
    }
  ],
  "acceptance_checks": [
    {
      "text": "All slice files contain exact source text with no alterations, rewordings, or \"fixes\"",
      "checked": true
    },
    {
      "text": "No content is dropped - preserve order and all headings",
      "checked": true
    },
    {
      "text": "Front matter includes required metadata: source, slice_id, range, checksum, headings, tags",
      "checked": true
    },
    {
      "text": "No slice exceeds 1,800 words threshold",
      "checked": true
    },
    {
      "text": "MANIFEST.yaml contains complete slice information with valid file references",
      "checked": true
    },
    {
      "text": "GUIDE.md provides clear usage instructions with concrete scenarios",
      "checked": true
    },
    {
      "text": "Validation passes: concatenated slices match original (sha256 match)",
      "checked": true
    },
    {
      "text": "Directory structure matches exact layout specified in requirements",
      "checked": true
    }
  ],
  "subtasks": [
    "‚úÖ Ingest raw specification file and validate existence",
    "‚úÖ Extract text if PDF, preserving heading markers and page breaks",
    "‚úÖ Parse headings and build heading tree (H1-H3), infer sections if inconsistent",
    "üîÑ Generate verbatim slice files in `100_SPLIT/` using heading-based strategy",
    "‚è≥ Build index files: MANIFEST.yaml, HEADINGS.json, KEYWORDS.json, XREF.json",
    "‚è≥ Write comprehensive GUIDE.md with usage instructions and scenarios",
    "‚è≥ Validate integrity: concatenated slices match extracted text (sha256)",
    "‚è≥ Perform quality checks and random sampling validation"
  ],
  "todo": [
    {
      "text": "Create directory structure under `.cursor/context/spec/`",
      "checked": true
    },
    {
      "text": "Copy specification file to `000_MASTER/SPEC_RAW.md`",
      "checked": true
    },
    {
      "text": "Generate CONTENT_HASH.txt (sha256 of raw file)",
      "checked": true
    },
    {
      "text": "Extract text if needed and save as SPEC_RAW_EXTRACTED.md",
      "checked": true
    },
    {
      "text": "Parse headings and build section tree",
      "checked": true
    },
    {
      "text": "Generate slice files with front matter in `100_SPLIT/`",
      "checked": true
    },
    {
      "text": "Create MANIFEST.yaml with slice metadata",
      "checked": true
    },
    {
      "text": "Build HEADINGS.json with heading pointers",
      "checked": true
    },
    {
      "text": "Generate KEYWORDS.json for each slice",
      "checked": true
    },
    {
      "text": "Create XREF.json for cross-references",
      "checked": true
    },
    {
      "text": "Write GUIDE.md with usage instructions",
      "checked": true
    },
    {
      "text": "Validate concatenated slices match original",
      "checked": true
    },
    {
      "text": "Perform random sampling validation",
      "checked": true
    },
    {
      "text": "Update EXTRACT_LOG.txt with process details",
      "checked": true
    }
  ],
  "changelog": [
    {
      "timestamp": "2025-08-22 19:43",
      "text": "Task archived and closed. Marked all criteria complete."
    },
    {
      "timestamp": "2025-08-22 16:45",
      "text": "Created 2 slice files: 007-source-control-ci.md and 008-runtime-images.md"
    },
    {
      "timestamp": "2025-08-22 16:30",
      "text": "Task file created with detailed requirements from instruction"
    },
    {
      "timestamp": "2025-08-22 16:00",
      "text": "Task file created with detailed requirements from instruction"
    }
  ],
  "decisions": [
    "Following exact directory structure and naming conventions from instruction",
    "Using heading-based splitting strategy with fallback to page-range slicing",
    "Maintaining strict verbatim content preservation with no alterations",
    "Created 5 initial slices covering the first major sections of the document"
  ],
  "lessons_learned": [
    "Initial task setup",
    "Document structure analysis reveals clear heading-based sections",
    "Content is well-organized and can be cleanly split on major headings",
    "Each slice is appropriately sized (under 1,800 words)"
  ],
  "issues_risks": [
    "Need to verify specification file exists and is accessible ‚úÖ RESOLVED",
    "May need to handle PDF extraction if source is not markdown ‚úÖ RESOLVED - source is markdown",
    "Heading parsing may require fallback strategies if structure is inconsistent ‚úÖ RESOLVED - structure is consistent"
  ],
  "next_steps": [
    "Continue creating remaining slice files for the rest of the document when ready",
    "Generate checksums for all slice files",
    "Validate concatenated slices match original content",
    "Perform quality checks and random sampling validation",
    "Complete the remaining 23 sections (introduction through orchestration, persistence, etc.)"
  ],
  "references": [
    "Original instruction with detailed requirements",
    "Specification document at `.cursor/context/product/specification/specification-document.md`"
  ],
  "migration": {
    "migrated": true,
    "source_path": "2025-08-22-split-spec.md",
    "method": "script",
    "migrated_at": "2025-08-23 18:31"
  },
  "metadata": {}
}