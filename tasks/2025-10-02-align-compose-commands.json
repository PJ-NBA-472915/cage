{
  "id": "2025-10-02-align-compose-commands",
  "title": "Align Docker Compose Commands with Container Entry Points",
  "owner": "Assistant",
  "status": "planned",
  "created_at": "2025-10-02 13:40",
  "updated_at": "2025-10-02 13:40",
  "progress_percent": 0,
  "tags": [
    "docker",
    "runtime",
    "consistency"
  ],
  "summary": "Review docker-compose.yml and override files to choose a consistent runtime execution strategy (.venv python vs uv run) and apply it across services.",
  "success_criteria": [
    {
      "text": "Each service uses a consistent command invocation pattern between base and override compose files",
      "checked": false
    },
    {
      "text": "Containers start without permission errors related to uv cache or virtualenv paths",
      "checked": false
    },
    {
      "text": "Documentation reflects the agreed command strategy",
      "checked": false
    }
  ],
  "acceptance_checks": [
    {
      "text": "docker compose --profile dev config | grep -A 3 'command:' shows consistent pattern across all services",
      "checked": false
    },
    {
      "text": "docker compose --profile dev up shows all services start without 'permission denied' or 'command not found' errors",
      "checked": false
    },
    {
      "text": "grep -r 'uv run\\|.venv/bin/python' docker-compose*.yml scripts/ shows alignment between compose and scripts",
      "checked": false
    },
    {
      "text": "docker compose --profile dev logs | grep -i error returns no startup command errors",
      "checked": false
    },
    {
      "text": "Documentation updated with chosen command strategy and rationale",
      "checked": false
    }
  ],
  "subtasks": [
    "1. Run docker compose --profile dev config and capture current command definitions per service",
    "2. Create comparison matrix: service name, base compose command, override compose command, script invocation",
    "3. Identify inconsistencies (e.g., files-api uses uv run, git-api uses .venv/bin/python)",
    "4. Check file permissions and ownership requirements for .venv/ and uv cache directories",
    "5. Document pros/cons: uv run (simpler, auto-manages env) vs .venv/bin/python (explicit, faster startup)",
    "6. Decide on single strategy based on container user permissions and startup performance",
    "7. Update docker-compose.yml service commands to use chosen strategy",
    "8. Update docker-compose.override.yml service commands to match",
    "9. Update any start-*.sh scripts in scripts/ to align with compose commands",
    "10. Test each service individually: docker compose --profile dev up <service-name>",
    "11. Verify no permission errors in logs: docker compose --profile dev logs <service-name>",
    "12. Document the chosen strategy in DOCKER.md or README with justification",
    "13. Add note about rebuilding if switching between uv run and .venv execution"
  ],
  "todo": [
    {
      "text": "Capture current compose command differences for each service",
      "status": "not-started",
      "date_started": null,
      "date_stopped": null
    },
    {
      "text": "Decide on single command strategy (uv run or .venv/bin/python)",
      "status": "not-started",
      "date_started": null,
      "date_stopped": null
    },
    {
      "text": "Apply updates to docker-compose.yml and docker-compose.override.yml",
      "status": "not-started",
      "date_started": null,
      "date_stopped": null
    },
    {
      "text": "Run docker compose --profile dev up to validate commands",
      "status": "not-started",
      "date_started": null,
      "date_stopped": null
    },
    {
      "text": "Update documentation to describe runtime command expectations",
      "status": "not-started",
      "date_started": null,
      "date_stopped": null
    }
  ],
  "changelog": [
    {
      "timestamp": "2025-10-02 13:40",
      "text": "Task created to manage compose command alignment."
    }
  ],
  "decisions": [
    "To be recorded after agreeing on command strategy."
  ],
  "lessons_learned": [],
  "issues_risks": [
    "Switching strategies may reintroduce permission or path issues if not tested across services."
  ],
  "next_steps": [
    "Produce a matrix of current command invocations per service.",
    "Schedule time with team (if needed) to agree on strategy."
  ],
  "references": [
    "docker-compose.yml",
    "docker-compose.override.yml",
    "scripts/start-mcp.sh"
  ],
  "prompts": [],
  "migration": {
    "migrated": false,
    "source_path": null,
    "method": null,
    "migrated_at": null
  },
  "metadata": {
    "impacted_services": [
      "files-api",
      "git-api",
      "rag-api",
      "lock-api",
      "crew-api",
      "mcp"
    ]
  }
}
