{
  "id": "2025-10-14-mcp-file-ops-01-wire-agent-invoke",
  "title": "Wire Crew API router to run engine for agent invocations",
  "owner": "Jaak",
  "status": "planned",
  "created_at": "2025-10-14T12:00:00",
  "updated_at": "2025-10-14T12:00:00",
  "progress_percent": 0,
  "tags": ["mcp", "crew-api", "integration", "phase-1"],
  "summary": "Modify invoke_agent() endpoint in Crew API router to call run_engine.execute_agent_run() instead of just queuing runs. This connects the API endpoint to actual agent execution.",
  "success_criteria": [
    { "text": "invoke_agent() calls run_engine.execute_agent_run() with created Run object", "checked": false },
    { "text": "Agent execution happens in background using asyncio.create_task()", "checked": false },
    { "text": "Run is returned immediately with 'queued' status", "checked": false }
  ],
  "acceptance_checks": [
    { "text": "Router imports run_engine from run_engine module", "checked": false },
    { "text": "asyncio is imported in router.py", "checked": false },
    { "text": "Background task is created for execution", "checked": false },
    { "text": "No breaking changes to API contract", "checked": false }
  ],
  "subtasks": [],
  "todo": [
    { "text": "Import run_engine in src/crew_service/router.py", "checked": false },
    { "text": "Import asyncio in router.py", "checked": false },
    { "text": "Modify invoke_agent() to call asyncio.create_task(run_engine.execute_agent_run(...))", "checked": false },
    { "text": "Ensure Run is still returned immediately with queued status", "checked": false }
  ],
  "changelog": [
    { "timestamp": "2025-10-14T12:00:00", "text": "Task created for MCP file operations integration project" }
  ],
  "decisions": [
    "Use asyncio.create_task() for background execution to avoid blocking API response",
    "Keep API contract unchanged - still return Run immediately with queued status"
  ],
  "lessons_learned": [],
  "issues_risks": [
    "Background task errors won't be immediately visible to caller",
    "Need proper error handling in run_engine to update Run status on failure"
  ],
  "next_steps": [
    "After completion, proceed to task 02 (wire crew_run endpoint)"
  ],
  "references": [
    "src/crew_service/router.py::invoke_agent() (line 162-190)",
    "src/crew_service/run_engine.py::execute_agent_run() (line 36-74)"
  ],
  "prompts": [],
  "locks": [],
  "migration": {
    "migrated": false,
    "source_path": null,
    "method": null,
    "migrated_at": null
  },
  "plan": {
    "title": "Wire agent invocation to run engine",
    "assumptions": [
      "run_engine is accessible as module-level import",
      "Run object structure matches what execute_agent_run expects",
      "Background execution is acceptable for this operation"
    ],
    "steps": [
      "Add import statements for run_engine and asyncio",
      "Modify invoke_agent endpoint to create background task",
      "Pass Run, agent_id, and task to execute_agent_run",
      "Test that API still returns immediately"
    ],
    "commit_message": "feat(crew-api): wire agent invocation to run engine\n\nConnect invoke_agent endpoint to run_engine.execute_agent_run() for\nactual agent execution. Uses background task to avoid blocking API.\n\nRelated to MCP file operations integration (task 01/15)"
  },
  "provenance": {
    "branch_from": "",
    "work_branch": "",
    "commits": [],
    "blobs_indexed": []
  },
  "artefacts": {
    "run_id": "",
    "logs": [],
    "reports": [],
    "diff_bundles": [],
    "external": []
  },
  "metadata": {
    "phase": "1",
    "task_number": "01",
    "total_tasks": "15",
    "project": "mcp-file-operations-integration"
  }
}
